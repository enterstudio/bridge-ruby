var search_data = {"index":{"searchIndex":["bridge","bridge","connect()","get_channel()","get_service()","join_channel()","leave_channel()","new()","publish_service()","ready()"],"longSearchIndex":["bridge","bridge::bridge","bridge::bridge#connect()","bridge::bridge#get_channel()","bridge::bridge#get_service()","bridge::bridge#join_channel()","bridge::bridge#leave_channel()","bridge::bridge::new()","bridge::bridge#publish_service()","bridge::bridge#ready()"],"info":[["Bridge","","Bridge.html","","<p>Flotype Bridge\n<p>Bridge is a cross-language and platform framework for realtime\ncommunication and RPC\n<p>The ...\n"],["Bridge::Bridge","","Bridge/Bridge.html","",""],["connect","Bridge::Bridge","Bridge/Bridge.html#method-i-connect","(&callback)","<p>Starts the connection to the Bridge server.\n<p>If a block is given, calls the given block when Bridge is ...\n"],["get_channel","Bridge::Bridge","Bridge/Bridge.html#method-i-get_channel","(name, &callback)","<p>Retrives a channel from Bridge with the given name.\n<p>Calling a method on the channel object will result ...\n"],["get_service","Bridge::Bridge","Bridge/Bridge.html#method-i-get_service","(name, &callback)","<p>Retrives a service published to Bridge with the given name.\n<p>If multiple Bridge clients have a published ...\n"],["join_channel","Bridge::Bridge","Bridge/Bridge.html#method-i-join_channel","(name, handler, &callback)","<p>Provides a remote object, ruby object or module as a receiver for methods\ncalls on a Bridge channel. ...\n"],["leave_channel","Bridge::Bridge","Bridge/Bridge.html#method-i-leave_channel","(channel, handler, &callback)","<p>Leaves a Bridge channel with the given name and handler object.\n<p>The given handler can be a remote object, ...\n"],["new","Bridge::Bridge","Bridge/Bridge.html#method-c-new","(options = {})","<p>Create an instance of the Bridge object. This object will be used for\nBridge interactions\n<p>Bridge#connect ...\n"],["publish_service","Bridge::Bridge","Bridge/Bridge.html#method-i-publish_service","(name, handler, &callback)","<p>Publishes a ruby object or module as a Bridge service with the given name.\n<p>If a block is given, calls ...\n"],["ready","Bridge::Bridge","Bridge/Bridge.html#method-i-ready","(&callback)","<p>Calls the given block when Bridge is connected and ready. Calls the given\nblock immediately if Bridge ...\n"]]}}